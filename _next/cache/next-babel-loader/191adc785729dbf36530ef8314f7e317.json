{"ast":null,"code":"var _jsxFileName = \"/home/maticaba/matidev/mainpage-frontend/components/specific/cause/map/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport style from '../style.module.scss';\n\nfunction Map({\n  location\n}) {\n  const {\n    0: coordenates,\n    1: setCoordenates\n  } = useState({\n    y: -26.231718,\n    x: -63.2485696\n  });\n  console.log(location);\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(1);\n  useEffect(() => {\n    if (location.coordenates) {\n      setCoordenates({\n        x: location.coordenates.x,\n        y: location.coordenates.y\n      });\n      setZoom(12);\n    }\n  }, [location]);\n  return __jsx(\"div\", {\n    className: style.map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyAQyrX0Pjjnrlz--nYA-UapCAragOrRdtw'\n    },\n    defaultCenter: {\n      lat: coordenates.y,\n      lng: coordenates.x\n    },\n    defaultZoom: zoom,\n    options: {\n      styles: styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, location && __jsx(Marcador, {\n    location: location,\n    lat: coordenates.y,\n    lng: coordenates.x,\n    name: \"My Marker\",\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default Map;\nexport function Marcador(props) {\n  const {\n    color,\n    name,\n    location\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: style.marker,\n    style: {\n      backgroundColor: color,\n      cursor: 'pointer'\n    },\n    title: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: style.mapInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: style.marker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: style.markerFill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: style.markerFillFill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: style.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: style.textContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, location && `${location.city}, ${location.country}`)))));\n}\nexport const styles = [{\n  elementType: 'geometry',\n  stylers: [{\n    color: '#f5f5f5'\n  }]\n}, {\n  elementType: 'labels.icon',\n  stylers: [{\n    visibility: 'off'\n  }]\n}, {\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#616161'\n  }]\n}, {\n  elementType: 'labels.text.stroke',\n  stylers: [{\n    color: '#f5f5f5'\n  }]\n}, {\n  featureType: 'administrative.land_parcel',\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#bdbdbd'\n  }]\n}, {\n  featureType: 'poi',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#eeeeee'\n  }]\n}, {\n  featureType: 'poi',\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#757575'\n  }]\n}, {\n  featureType: 'poi.park',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#e5e5e5'\n  }]\n}, {\n  featureType: 'poi.park',\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#9e9e9e'\n  }]\n}, {\n  featureType: 'road',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#ffffff'\n  }]\n}, {\n  featureType: 'road.arterial',\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#757575'\n  }]\n}, {\n  featureType: 'road.highway',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#dadada'\n  }]\n}, {\n  featureType: 'road.highway',\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#616161'\n  }]\n}, {\n  featureType: 'road.local',\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#9e9e9e'\n  }]\n}, {\n  featureType: 'transit.line',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#e5e5e5'\n  }]\n}, {\n  featureType: 'transit.station',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#eeeeee'\n  }]\n}, {\n  featureType: 'water',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#c9c9c9'\n  }]\n}, {\n  featureType: 'water',\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#9e9e9e'\n  }]\n}];","map":{"version":3,"sources":["/home/maticaba/matidev/mainpage-frontend/components/specific/cause/map/index.tsx"],"names":["useState","useEffect","GoogleMapReact","style","Map","location","coordenates","setCoordenates","y","x","console","log","zoom","setZoom","map","key","lat","lng","styles","Marcador","props","color","name","marker","backgroundColor","cursor","mapInfo","markerFill","markerFillFill","address","textContainer","city","country","elementType","stylers","visibility","featureType"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport GoogleMapReact from 'google-map-react'\n\nimport style from '../style.module.scss'\n\nfunction Map({ location }) {\n  const [coordenates, setCoordenates] = useState({\n    y: -26.231718,\n    x: -63.2485696,\n  })\n  console.log(location)\n  const [zoom, setZoom] = useState(1)\n  useEffect(() => {\n    if (location.coordenates) {\n      setCoordenates({\n        x: location.coordenates.x,\n        y: location.coordenates.y,\n      })\n      setZoom(12)\n    }\n  }, [location])\n\n  return (\n    <div className={style.map}>\n      <GoogleMapReact\n        bootstrapURLKeys={{\n          key: 'AIzaSyAQyrX0Pjjnrlz--nYA-UapCAragOrRdtw',\n        }}\n        defaultCenter={{ lat: coordenates.y, lng: coordenates.x }}\n        defaultZoom={zoom}\n        options={{ styles: styles }}\n      >\n        {location && (\n          <Marcador\n            location={location}\n            lat={coordenates.y}\n            lng={coordenates.x}\n            name=\"My Marker\"\n            color=\"blue\"\n          />\n        )}\n      </GoogleMapReact>\n    </div>\n  )\n}\n\nexport default Map\n\nexport function Marcador(props: any) {\n  const { color, name, location } = props\n\n  return (\n    <>\n      <div\n        className={style.marker}\n        style={{ backgroundColor: color, cursor: 'pointer' }}\n        title={name}\n      />\n      <div className={style.mapInfo}>\n        <div className={style.marker}>\n          <div className={style.markerFill}></div>\n          <div className={style.markerFillFill}></div>\n        </div>\n        <div className={style.address}>\n          <div className={style.textContainer}>\n            <div>{location && `${location.city}, ${location.country}`}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport const styles = [\n  {\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#f5f5f5',\n      },\n    ],\n  },\n  {\n    elementType: 'labels.icon',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#616161',\n      },\n    ],\n  },\n  {\n    elementType: 'labels.text.stroke',\n    stylers: [\n      {\n        color: '#f5f5f5',\n      },\n    ],\n  },\n  {\n    featureType: 'administrative.land_parcel',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#bdbdbd',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#eeeeee',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#757575',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#e5e5e5',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#9e9e9e',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#ffffff',\n      },\n    ],\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#757575',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#dadada',\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#616161',\n      },\n    ],\n  },\n  {\n    featureType: 'road.local',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#9e9e9e',\n      },\n    ],\n  },\n  {\n    featureType: 'transit.line',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#e5e5e5',\n      },\n    ],\n  },\n  {\n    featureType: 'transit.station',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#eeeeee',\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#c9c9c9',\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        color: '#9e9e9e',\n      },\n    ],\n  },\n]\n"]},"metadata":{},"sourceType":"module"}