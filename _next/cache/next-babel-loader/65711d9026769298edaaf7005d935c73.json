{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/maticaba/matidev/mainpage-frontend/pages/projects.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Organizations(\\n    $causeId: String\\n    $country: String\\n    $donationLinks: Boolean\\n    $donationBankAccountName: Boolean\\n    $donationProducts: Boolean\\n    $endCursor: String\\n  ) {\\n    getOrganizations(\\n      first: 12\\n      endCursor: $endCursor\\n      causeId: $causeId\\n      country: $country\\n      donationLinks: $donationLinks\\n      donationBankAccountName: $donationBankAccountName\\n      donationProducts: $donationProducts\\n    ) {\\n      pageData {\\n        totalOrganizations\\n        hasNextPage\\n        endCursor\\n      }\\n      organizations {\\n        id\\n        name\\n        slug\\n        country\\n        logoUrl\\n        donationLinks\\n        donationBankAccountName\\n        donationProducts\\n        causes {\\n          name\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Head from 'next/head';\nimport { useState } from 'react'; // Components & Usables\n\nimport CauseList from '@/components/specific/causeList'; // Apollo\n\nimport { useQuery, gql } from '@apollo/client';\n// Schema\nvar querySchema = gql(_templateObject());\nvar filtersDefault = {\n  country: '',\n  causeId: '',\n  donationLinks: false,\n  donationBankAccountName: false,\n  donationProducts: false,\n  endCursor: ''\n};\n\nvar OngList = function OngList() {\n  _s();\n\n  // Filter State\n  var _useState = useState(filtersDefault),\n      filters = _useState[0],\n      setFilters = _useState[1];\n\n  var _useQuery = useQuery(querySchema, {\n    variables: filters\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch,\n      fetchMore = _useQuery.fetchMore; // Filter handlers\n\n\n  var handleCountry = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(country) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n                country: country,\n                endCursor: ''\n              }));\n\n            case 2:\n              _context.next = 4;\n              return refetch();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCountry(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCauseId = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(causeId) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n                causeId: causeId,\n                endCursor: ''\n              }));\n\n            case 2:\n              _context2.next = 4;\n              return refetch();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleCauseId(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleDonationLinks = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_boolean) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n                donationLinks: _boolean,\n                endCursor: ''\n              }));\n\n            case 2:\n              _context3.next = 4;\n              return refetch();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDonationLinks(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleDonationBankAccountName = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_boolean2) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n                donationBankAccountName: _boolean2,\n                endCursor: ''\n              }));\n\n            case 2:\n              _context4.next = 4;\n              return refetch();\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleDonationBankAccountName(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleDonationProducts = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_boolean3) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n                donationProducts: _boolean3,\n                endCursor: ''\n              }));\n\n            case 2:\n              _context5.next = 4;\n              return refetch();\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleDonationProducts(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var resetFilters = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return setFilters(filtersDefault);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function resetFilters() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  if (error) {\n    console.log(error);\n  }\n\n  var handleNextPage = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var endCursor;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              endCursor = data.getOrganizations.pageData.endCursor;\n              _context7.next = 3;\n              return setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n                endCursor: endCursor\n              }));\n\n            case 3:\n              fetchMore({\n                variables: filters,\n                updateQuery: function updateQuery(prevResult, _ref8) {\n                  var _data$getOrganization, _fetchMoreResult$getO;\n\n                  var fetchMoreResult = _ref8.fetchMoreResult;\n                  if (!fetchMoreResult) return prevResult;\n                  return {\n                    getOrganizations: _objectSpread(_objectSpread({}, data === null || data === void 0 ? void 0 : data.getOrganizations), {}, {\n                      data: [].concat(_toConsumableArray(data === null || data === void 0 ? void 0 : (_data$getOrganization = data.getOrganizations) === null || _data$getOrganization === void 0 ? void 0 : _data$getOrganization.organizations), _toConsumableArray(fetchMoreResult === null || fetchMoreResult === void 0 ? void 0 : (_fetchMoreResult$getO = fetchMoreResult.getOrganizations) === null || _fetchMoreResult$getO === void 0 ? void 0 : _fetchMoreResult$getO.organizations))\n                    })\n                  };\n                  /*         fetchMoreResult.getOrganizations = [\n                    ...prevResult.getOrganizations,\n                    ...fetchMoreResult.getOrganizations,\n                  ]\n                  return fetchMoreResult */\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleNextPage() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Organizaciones | gentem\")), !loading && console.log(data.getOrganizations), __jsx(CauseList, {\n    select: {\n      handleCauseId: handleCauseId,\n      handleCountry: handleCountry\n    },\n    checkbox: {\n      handleDonationLinks: handleDonationLinks,\n      handleDonationBankAccountName: handleDonationBankAccountName,\n      handleDonationProducts: handleDonationProducts\n    },\n    handleNextPage: handleNextPage,\n    filters: filters,\n    resetFilters: resetFilters,\n    loading: loading,\n    data: !loading && data.getOrganizations,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(OngList, \"NlxSfsTcci72VEg1+aFZztTaWxk=\", false, function () {\n  return [useQuery];\n});\n\n_c = OngList;\nexport var __N_SSP = true;\nexport default OngList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OngList\");","map":{"version":3,"sources":["/home/maticaba/matidev/mainpage-frontend/pages/projects.tsx"],"names":["Head","useState","CauseList","useQuery","gql","querySchema","filtersDefault","country","causeId","donationLinks","donationBankAccountName","donationProducts","endCursor","OngList","filters","setFilters","variables","data","loading","error","refetch","fetchMore","handleCountry","handleCauseId","handleDonationLinks","boolean","handleDonationBankAccountName","handleDonationProducts","resetFilters","console","log","handleNextPage","getOrganizations","pageData","updateQuery","prevResult","fetchMoreResult","organizations"],"mappings":"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","sourcesContent":["import { NextPage, GetServerSideProps } from 'next'\nimport Head from 'next/head'\nimport { useState } from 'react'\n\n// Components & Usables\nimport CauseList from '@/components/specific/causeList'\n\n// Apollo\nimport { initializeApollo } from '../api'\nimport { useQuery, gql } from '@apollo/client'\n\ninterface organization {\n  id: string\n  name: string\n  slug: string\n  country: string\n  logoUrl: string\n  donationLinks: string[]\n  donationBankAccountName: string\n  donationProducts: string\n  causes: string[]\n}\n\ninterface pageData {\n  totalOrganizations: number\n  hasNextPage: boolean\n  endCursor: string\n}\n\ninterface data {\n  getOrganizations: {\n    pageData: pageData\n    organizations: organization[]\n  }\n}\n\n// Schema\nconst querySchema = gql`\n  query Organizations(\n    $causeId: String\n    $country: String\n    $donationLinks: Boolean\n    $donationBankAccountName: Boolean\n    $donationProducts: Boolean\n    $endCursor: String\n  ) {\n    getOrganizations(\n      first: 12\n      endCursor: $endCursor\n      causeId: $causeId\n      country: $country\n      donationLinks: $donationLinks\n      donationBankAccountName: $donationBankAccountName\n      donationProducts: $donationProducts\n    ) {\n      pageData {\n        totalOrganizations\n        hasNextPage\n        endCursor\n      }\n      organizations {\n        id\n        name\n        slug\n        country\n        logoUrl\n        donationLinks\n        donationBankAccountName\n        donationProducts\n        causes {\n          name\n        }\n      }\n    }\n  }\n`\n\nconst filtersDefault = {\n  country: '',\n  causeId: '',\n  donationLinks: false,\n  donationBankAccountName: false,\n  donationProducts: false,\n  endCursor: '',\n}\nconst OngList: NextPage = () => {\n  // Filter State\n  const [filters, setFilters] = useState(filtersDefault)\n  const { data, loading, error, refetch, fetchMore } = useQuery<data>(\n    querySchema,\n    {\n      variables: filters,\n    }\n  )\n  // Filter handlers\n  const handleCountry = async (country) => {\n    await setFilters({ ...filters, country: country, endCursor: '' })\n    await refetch()\n  }\n  const handleCauseId = async (causeId) => {\n    await setFilters({ ...filters, causeId: causeId, endCursor: '' })\n    await refetch()\n  }\n  const handleDonationLinks = async (boolean) => {\n    await setFilters({ ...filters, donationLinks: boolean, endCursor: '' })\n    await refetch()\n  }\n  const handleDonationBankAccountName = async (boolean) => {\n    await setFilters({\n      ...filters,\n      donationBankAccountName: boolean,\n      endCursor: '',\n    })\n    await refetch()\n  }\n  const handleDonationProducts = async (boolean) => {\n    await setFilters({\n      ...filters,\n      donationProducts: boolean,\n      endCursor: '',\n    })\n    await refetch()\n  }\n  const resetFilters = async () => {\n    await setFilters(filtersDefault)\n  }\n  if (error) {\n    console.log(error)\n  }\n  const handleNextPage = async () => {\n    const { endCursor } = data.getOrganizations.pageData\n    await setFilters({ ...filters, endCursor: endCursor })\n    fetchMore({\n      variables: filters,\n      updateQuery: (prevResult: any, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prevResult\n        return {\n          getOrganizations: {\n            ...data?.getOrganizations,\n            data: [\n              ...data?.getOrganizations?.organizations,\n              ...fetchMoreResult?.getOrganizations?.organizations,\n            ],\n          },\n        }\n        /*         fetchMoreResult.getOrganizations = [\n          ...prevResult.getOrganizations,\n          ...fetchMoreResult.getOrganizations,\n        ]\n        return fetchMoreResult */\n      },\n    })\n  }\n  return (\n    <>\n      <Head>\n        <title>Organizaciones | gentem</title>\n      </Head>\n\n      {!loading && console.log(data.getOrganizations)}\n      <CauseList\n        select={{ handleCauseId, handleCountry }}\n        checkbox={{\n          handleDonationLinks,\n          handleDonationBankAccountName,\n          handleDonationProducts,\n        }}\n        handleNextPage={handleNextPage}\n        filters={filters}\n        resetFilters={resetFilters}\n        loading={loading}\n        data={!loading && data.getOrganizations}\n      />\n    </>\n  )\n}\n\nexport default OngList\n\nexport const getServerSideProps: GetServerSideProps = async () => {\n  const apolloClient = initializeApollo()\n\n  await apolloClient.query({\n    query: querySchema,\n    variables: filtersDefault,\n  })\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}