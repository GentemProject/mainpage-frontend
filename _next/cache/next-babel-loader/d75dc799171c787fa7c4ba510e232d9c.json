{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/maticaba/matidev/mainpage-frontend/components/specific/causeList/components/filter/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n      getCauses {\\n        id\\n        name\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client'; // Components\n\nimport SearchSelect from '../SearchSelect';\n\n/*  Material UI for Select */\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n/* import {\n  Select,\n  Option,\n} from '../../../../utils/interactive/inputs/form/select' */\n// Style\n\nimport style from '../../style.module.scss';\n\nfunction Filter(_ref) {\n  _s();\n\n  var _this = this;\n\n  var select = _ref.select,\n      filters = _ref.filters;\n\n  var _useState = useState([]),\n      ciudad = _useState[0],\n      setCiudad = _useState[1];\n  /*   useEffect(() => {\n    getDistinct().then(\n      (data) => {\n        setCiudad(data)\n      },\n      (error) => {\n        setCiudad(error)\n      }\n    )\n  }, [])\n  */\n  // getCause from GraphQL\n\n\n  var querySchema = gql(_templateObject());\n\n  var _useQuery = useQuery(querySchema, {\n    variables: filters,\n    ssr: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: style.filterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Usa los filtros para encontrar las organizaciones que quieras apoyar\")), __jsx(SearchSelect, {\n    title: \"Causa afectada\",\n    info: \"Filtra por causa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%',\n      marginTop: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Causa\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: filters.causeId,\n    onChange: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return select.handleCauseId(e.target.value);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Todas las causas\"), !loading && data.getCauses.map(function (data, index) {\n    return __jsx(MenuItem, {\n      key: index,\n      value: data.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, console.log(data), data.name);\n  })))), __jsx(SearchSelect, {\n    title: \"Tipo de donaci\\xF3n\",\n    info: \"Filtra seg\\xFAn la forma en la que quieras donar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Filter, \"j6beGsUowNEUtIoGaFp6MxGdGjk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/maticaba/matidev/mainpage-frontend/components/specific/causeList/components/filter/index.tsx"],"names":["useState","useQuery","gql","SearchSelect","FormControl","Select","InputLabel","MenuItem","style","Filter","select","filters","ciudad","setCiudad","querySchema","variables","ssr","data","loading","filterContainer","width","marginTop","causeId","e","handleCauseId","target","value","getCauses","map","index","id","console","log","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useQuery, gql } from '@apollo/client'\n\n// Components\nimport SearchSelect from '../SearchSelect'\nimport { TextCheck } from '../../../../utils/interactive/inputs/form/switch'\nimport { getDistinct } from '../../../../../api/filters'\n\n/*  Material UI for Select */\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\n/* import {\n  Select,\n  Option,\n} from '../../../../utils/interactive/inputs/form/select' */\n\n// Style\nimport style from '../../style.module.scss'\nfunction Filter({ select, /* checkbox, */ filters }) {\n  const [ciudad, setCiudad] = useState([])\n  /*   useEffect(() => {\n    getDistinct().then(\n      (data) => {\n        setCiudad(data)\n      },\n      (error) => {\n        setCiudad(error)\n      }\n    )\n  }, [])\n */\n  // getCause from GraphQL\n  const querySchema = gql`\n    {\n      getCauses {\n        id\n        name\n      }\n    }\n  `\n  const { data, loading } = useQuery(querySchema, {\n    variables: filters,\n    ssr: true,\n  })\n  return (\n    <>\n      <div className={style.filterContainer}>\n        <div>\n          <h6>\n            Usa los filtros para encontrar las organizaciones que quieras apoyar\n          </h6>\n        </div>\n        {/*         <SearchSelect title=\"Ubicación\" info=\"Filtra por país\">\n          <FormControl style={{ width: '100%', marginTop: '12px' }}>\n            <InputLabel id=\"demo-simple-select-label\">País</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={filters.country}\n              onChange={async (e) => {\n                await select.handleCountry(e.target.value)\n              }}\n            >\n              <MenuItem value=\"\">\n                <em>Todos los paises</em>\n              </MenuItem>\n              {ciudad &&\n                ciudad.map((data) => {\n                  return (\n                    <MenuItem key={data} value={data}>\n                      {data}\n                    </MenuItem>\n                  )\n                })}\n            </Select>\n          </FormControl>\n        </SearchSelect> */}\n        <SearchSelect title=\"Causa afectada\" info=\"Filtra por causa\">\n          <FormControl style={{ width: '100%', marginTop: '12px' }}>\n            <InputLabel id=\"demo-simple-select-label\">Causa</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={filters.causeId}\n              onChange={async (e) => {\n                await select.handleCauseId(e.target.value)\n              }}\n            >\n              <MenuItem value=\"\">Todas las causas</MenuItem>\n              {!loading &&\n                data.getCauses.map((data, index) => {\n                  return (\n                    <MenuItem key={index} value={data.id}>\n                      {console.log(data)}\n                      {data.name}\n                    </MenuItem>\n                  )\n                })}\n            </Select>\n          </FormControl>\n        </SearchSelect>\n        <SearchSelect\n          title=\"Tipo de donación\"\n          info=\"Filtra según la forma en la que quieras donar\"\n        >\n          {/* <TextCheck\n            title=\"Donar online\"\n            desc=\"Link para donar desde casa\"\n            change={checkbox.handleDonationLinks}\n            boolean={filters.donationLinks}\n            name=\"paymenData\"\n          />\n          <TextCheck\n            title=\"Transferencia bancaria\"\n            desc=\"Información de las cuentas para que hagas una transferencia\"\n            change={checkbox.handleDonationBankAccountName}\n            boolean={filters.donationBankAccountName}\n            name=\"transfer\"\n          />\n\n          <TextCheck\n            title=\"Donar productos\"\n            desc=\"Información sobre como entregar los productos que quieras donar\"\n            change={checkbox.handleDonationProducts}\n            boolean={filters.donationProducts}\n            name=\"products\"\n          /> */}\n        </SearchSelect>\n      </div>\n    </>\n  )\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}