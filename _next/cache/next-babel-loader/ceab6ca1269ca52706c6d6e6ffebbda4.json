{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/maticaba/matidev/mainpage-frontend/components/specific/causeList/components/filter/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n      getCauses {\\n        id\\n        name\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useEffect } from 'react';\nimport { useQuery, gql } from '@apollo/client'; // Components\n\nimport SearchSelect from '../SearchSelect';\nimport { TextCheck } from '../../../../utils/interactive/inputs/form/switch';\nimport { getDistinct } from '../../../../../api/filters';\n/*  Material UI for Select */\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n/* import {\n  Select,\n  Option,\n} from '../../../../utils/interactive/inputs/form/select' */\n// Style\n\nimport style from '../../style.module.scss';\n\nfunction Filter(_ref) {\n  _s();\n\n  var _this = this;\n\n  var select = _ref.select,\n      checkbox = _ref.checkbox,\n      filters = _ref.filters;\n\n  var _useState = useState([]),\n      ciudad = _useState[0],\n      setCiudad = _useState[1];\n\n  useEffect(function () {\n    getDistinct().then(function (data) {\n      setCiudad(data);\n    }, function (error) {\n      setCiudad(error);\n    });\n  }, []); // getCause from GraphQL\n\n  var querySchema = gql(_templateObject());\n\n  var _useQuery = useQuery(querySchema, {\n    variables: filters,\n    ssr: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: style.filterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Usa los filtros para encontrar las organizaciones que quieras apoyar\")), __jsx(SearchSelect, {\n    title: \"Ubicaci\\xF3n\",\n    info: \"Filtra por pa\\xEDs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%',\n      marginTop: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Pa\\xEDs\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: filters.country,\n    onChange: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return select.handleCountry(e.target.value);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, __jsx(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Todos los paises\")), ciudad && ciudad.map(function (data) {\n    return __jsx(MenuItem, {\n      key: data,\n      value: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, data);\n  })))), __jsx(SearchSelect, {\n    title: \"Causa afectada\",\n    info: \"Filtra por causa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%',\n      marginTop: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Causa\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: filters.causeId,\n    onChange: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return select.handleCauseId(e.target.value);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Todas las causas\"), !loading && data.getCauses.map(function (data) {\n    return __jsx(MenuItem, {\n      key: data.id,\n      value: data.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, data.name);\n  })))), __jsx(SearchSelect, {\n    title: \"Tipo de donaci\\xF3n\",\n    info: \"Filtra seg\\xFAn la forma en la que quieras donar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(TextCheck, {\n    title: \"Donar online\",\n    desc: \"Link para donar desde casa\",\n    change: checkbox.handleDonationLinks,\n    \"boolean\": filters.donationLinks,\n    name: \"paymenData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), __jsx(TextCheck, {\n    title: \"Transferencia bancaria\",\n    desc: \"Informaci\\xF3n de las cuentas para que hagas una transferencia\",\n    change: checkbox.handleDonationBankAccountName,\n    \"boolean\": filters.donationBankAccountName,\n    name: \"transfer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), __jsx(TextCheck, {\n    title: \"Donar productos\",\n    desc: \"Informaci\\xF3n sobre como entregar los productos que quieras donar\",\n    change: checkbox.handleDonationProducts,\n    \"boolean\": filters.donationProducts,\n    name: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(Filter, \"bWO5R5HTz2zYwxhHxAsFbShiClw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/maticaba/matidev/mainpage-frontend/components/specific/causeList/components/filter/index.tsx"],"names":["useState","useEffect","useQuery","gql","SearchSelect","TextCheck","getDistinct","FormControl","Select","InputLabel","MenuItem","style","Filter","select","checkbox","filters","ciudad","setCiudad","then","data","error","querySchema","variables","ssr","loading","filterContainer","width","marginTop","country","e","handleCountry","target","value","map","causeId","handleCauseId","getCauses","id","name","handleDonationLinks","donationLinks","handleDonationBankAccountName","donationBankAccountName","handleDonationProducts","donationProducts"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useQuery, gql } from '@apollo/client'\n\n// Components\nimport SearchSelect from '../SearchSelect'\nimport { TextCheck } from '../../../../utils/interactive/inputs/form/switch'\nimport { getDistinct } from '../../../../../api/filters'\n\n/*  Material UI for Select */\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\n/* import {\n  Select,\n  Option,\n} from '../../../../utils/interactive/inputs/form/select' */\n\n// Style\nimport style from '../../style.module.scss'\nfunction Filter({ select, checkbox, filters }) {\n  const [ciudad, setCiudad] = useState([])\n  useEffect(() => {\n    getDistinct().then(\n      (data) => {\n        setCiudad(data)\n      },\n      (error) => {\n        setCiudad(error)\n      }\n    )\n  }, [])\n\n  // getCause from GraphQL\n  const querySchema = gql`\n    {\n      getCauses {\n        id\n        name\n      }\n    }\n  `\n  const { data, loading } = useQuery(querySchema, {\n    variables: filters,\n    ssr: true,\n  })\n  return (\n    <>\n      <div className={style.filterContainer}>\n        <div>\n          <h6>\n            Usa los filtros para encontrar las organizaciones que quieras apoyar\n          </h6>\n        </div>\n        <SearchSelect title=\"Ubicación\" info=\"Filtra por país\">\n          <FormControl style={{ width: '100%', marginTop: '12px' }}>\n            <InputLabel id=\"demo-simple-select-label\">País</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={filters.country}\n              onChange={async (e) => {\n                await select.handleCountry(e.target.value)\n              }}\n            >\n              <MenuItem value=\"\">\n                <em>Todos los paises</em>\n              </MenuItem>\n              {ciudad &&\n                ciudad.map((data) => {\n                  return (\n                    <MenuItem key={data} value={data}>\n                      {data}\n                    </MenuItem>\n                  )\n                })}\n            </Select>\n          </FormControl>\n        </SearchSelect>\n        <SearchSelect title=\"Causa afectada\" info=\"Filtra por causa\">\n          <FormControl style={{ width: '100%', marginTop: '12px' }}>\n            <InputLabel id=\"demo-simple-select-label\">Causa</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={filters.causeId}\n              onChange={async (e) => {\n                await select.handleCauseId(e.target.value)\n              }}\n            >\n              <MenuItem value=\"\">Todas las causas</MenuItem>\n              {!loading &&\n                data.getCauses.map((data) => {\n                  return (\n                    <MenuItem key={data.id} value={data.id}>\n                      {data.name}\n                    </MenuItem>\n                  )\n                })}\n            </Select>\n          </FormControl>\n        </SearchSelect>\n        <SearchSelect\n          title=\"Tipo de donación\"\n          info=\"Filtra según la forma en la que quieras donar\"\n        >\n          <TextCheck\n            title=\"Donar online\"\n            desc=\"Link para donar desde casa\"\n            change={checkbox.handleDonationLinks}\n            boolean={filters.donationLinks}\n            name=\"paymenData\"\n          />\n          <TextCheck\n            title=\"Transferencia bancaria\"\n            desc=\"Información de las cuentas para que hagas una transferencia\"\n            change={checkbox.handleDonationBankAccountName}\n            boolean={filters.donationBankAccountName}\n            name=\"transfer\"\n          />\n\n          <TextCheck\n            title=\"Donar productos\"\n            desc=\"Información sobre como entregar los productos que quieras donar\"\n            change={checkbox.handleDonationProducts}\n            boolean={filters.donationProducts}\n            name=\"products\"\n          />\n        </SearchSelect>\n      </div>\n    </>\n  )\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}