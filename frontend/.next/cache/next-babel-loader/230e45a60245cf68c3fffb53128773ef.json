{"ast":null,"code":"var _jsxFileName = \"/home/uriel/gentemapp/frontend/components/projects/TextCheck.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState } from 'react'; // Material UI Check\n\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch'; // Styles\n\nimport * as styles from '../../styles/onglist.module.scss';\nconst IOSSwitch = withStyles(theme => createStyles({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#237ed5',\n        opacity: 1,\n        border: 'none'\n      }\n    },\n    '&$focusVisible $thumb': {\n      color: '#237ed5',\n      border: '6px solid #fff'\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border'])\n  },\n  checked: {},\n  focusVisible: {}\n}))((_ref) => {\n  let {\n    classes\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return __jsx(Switch, _extends({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n});\nexport default function TextCheck({\n  title,\n  desc,\n  change,\n  name\n}) {\n  const {\n    0: check,\n    1: setCheck\n  } = useState({\n    checkedB: false\n  });\n\n  const handleChange = event => {\n    setCheck(_objectSpread(_objectSpread({}, check), {}, {\n      [event.target.name]: event.target.checked\n    }));\n    console.log(check.checkedB);\n    change(event.target.checked, name);\n  };\n\n  return __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.textCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.textCheckTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, title), __jsx(FormControlLabel, {\n    control: __jsx(IOSSwitch, {\n      checked: check.checkedB,\n      onChange: handleChange,\n      name: \"checkedB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }),\n    label: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: styles.textCheckBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, desc)));\n}","map":{"version":3,"sources":["/home/uriel/gentemapp/frontend/components/projects/TextCheck.tsx"],"names":["useState","withStyles","createStyles","FormGroup","FormControlLabel","Switch","styles","IOSSwitch","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","TextCheck","title","desc","change","name","check","setCheck","checkedB","handleChange","event","target","console","log","textCheck","textCheckTop","textCheckBottom"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\n// Material UI Check\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch'\n\n// Styles\nimport * as styles from '../../styles/onglist.module.scss'\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n  focusVisible?: string\n}\n\ninterface Props extends SwitchProps {\n  classes: Styles\n}\nconst IOSSwitch = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#237ed5',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#237ed5',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  })\n)(({ classes, ...props }: Props) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  )\n})\n\nexport default function TextCheck({ title, desc, change, name}) {\n  const [check, setCheck] = useState({\n    checkedB: false,\n  })\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCheck({ ...check, [event.target.name]: event.target.checked })\n    console.log(check.checkedB)\n    change(event.target.checked, name)\n  }\n\n  return (\n    <FormGroup>\n      <div className={styles.textCheck}>\n        <div className={styles.textCheckTop}>\n          <h6>{title}</h6>\n          <FormControlLabel\n            control={\n              <IOSSwitch\n                checked={check.checkedB}\n                onChange={handleChange}\n                name=\"checkedB\"\n              />\n            }\n            label=\"\"\n          />\n        </div>\n        <div className={styles.textCheckBottom}>{desc}</div>\n      </div>\n    </FormGroup>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}