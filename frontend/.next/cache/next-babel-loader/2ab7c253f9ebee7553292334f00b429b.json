{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport { ModalContent } from './Contenido';\nimport TargetBase from '../usables/TargetBase';\nimport ResultItem from './ResultItem';\nimport * as styles from '../../styles/onglist.module.scss';\nconst {\n  Sider\n} = _Layout;\n\nfunction ContenidoSider(props) {\n  const {\n    0: estado,\n    1: setEstado\n  } = useState({\n    visible: false\n  });\n  const filter = props.filter;\n\n  const handleModal = () => {\n    setEstado({\n      visible: true\n    });\n  };\n\n  const handleClose = () => {\n    setEstado({\n      visible: false\n    });\n  };\n\n  const {\n    ONGs\n  } = props;\n  return __jsx(Sider, {\n    className: styles.ongListResult\n  }, __jsx(\"div\", {\n    className: styles.ongListResultQuantity\n  }, __jsx(\"h6\", null, \"Mostrando \", ONGs.data.length, \" proyectos\"), __jsx(\"div\", {\n    className: styles.quantityBtn,\n    onClick: handleModal\n  }, \"FILTROS\"), __jsx(_Modal, {\n    maskClosable: true,\n    footer: null,\n    centered: true,\n    onCancel: handleClose,\n    visible: estado.visible\n  }, __jsx(ModalContent, null))), filter && __jsx(TargetBase, {\n    filter: filter\n  }), __jsx(LazyContenidoSider, {\n    ONGs: ONGs\n  }));\n}\n\nfunction LazyContenidoSider({\n  ONGs\n}) {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const elementRef = useRef();\n  useEffect(() => {\n    const onChange = (entries, observer) => {\n      const el = entries[0];\n\n      if (el.isIntersecting) {\n        setShow(true);\n        /* observer.disconnect() */\n      }\n    };\n\n    const observer = new IntersectionObserver(onChange, {\n      rootMargin: '500px'\n    });\n    observer.observe(elementRef.current);\n    /*   return () => observer.disconnect() */\n  });\n  return __jsx(\"div\", {\n    ref: elementRef\n  }, show ? ONGs.data.map(ong => {\n    return __jsx(Link, {\n      key: ong.slug,\n      href: `/org/${ong.slug}`\n    }, __jsx(\"a\", null, __jsx(ResultItem, {\n      name: ong.name,\n      desc: ong.description,\n      logo: ong.logo,\n      city: ong.city,\n      country: ong.country\n    })));\n  }) : null);\n}\n\nexport default ContenidoSider;","map":null,"metadata":{},"sourceType":"module"}