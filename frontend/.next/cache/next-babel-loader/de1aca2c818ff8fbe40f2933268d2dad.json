{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/maticaba/matidev/gentemapp/frontend/components/projects/TextCheck.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport React from 'react';\nvar IOSSwitch = withStyles(function (theme) {\n  return {\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none'\n        }\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff'\n      }\n    },\n    thumb: {\n      width: 24,\n      height: 24\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: \"1px solid \".concat(theme.palette.grey[400]),\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border'])\n    },\n    checked: {},\n    focusVisible: {}\n  };\n})(function (_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return __jsx(Switch, _extends({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }));\n});\n/* function textCheck(props: any) {\n      return (\n        <div className=\"textCheck\">\n          <div className=\"textCheck__top\">\n            <h6>{props.title}</h6>\n            <Switch defaultChecked onChange={onChange} />\n          </div>\n          <div className=\"textCheck__bottom\">{props.desc}</div>\n        </div>\n      )\n    }\n    export default textCheck\n     */\n\nexport default function Checker() {\n  _s();\n\n  var _useState = useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  }),\n      check = _useState[0],\n      setCheck = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    setCheck(_objectSpread(_objectSpread({}, check), {}, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n}\n\n_s(Checker, \"KPekiMlvevS7TYibkDMkoI4vxmk=\");\n\n_c = Checker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checker\");","map":{"version":3,"sources":["/home/maticaba/matidev/gentemapp/frontend/components/projects/TextCheck.tsx"],"names":["useState","withStyles","Switch","React","IOSSwitch","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Checker","checkedA","checkedB","checkedC","check","setCheck","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Switch from '@material-ui/core/Switch'\nimport React from 'react'\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  )\n})\n/* function textCheck(props: any) {\n      return (\n        <div className=\"textCheck\">\n          <div className=\"textCheck__top\">\n            <h6>{props.title}</h6>\n            <Switch defaultChecked onChange={onChange} />\n          </div>\n          <div className=\"textCheck__bottom\">{props.desc}</div>\n        </div>\n      )\n    }\n    export default textCheck\n     */\n\nexport default function Checker() {\n  const [check, setCheck] = useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  })\n\n  const handleChange = (event) => {\n    setCheck({ ...check, [event.target.name]: event.target.checked })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}