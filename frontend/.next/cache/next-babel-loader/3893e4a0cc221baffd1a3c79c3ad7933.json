{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react'; // Material UI Check\n\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch'; // Styles\n\nimport * as styles from '../../styles/onglist.module.scss';\nvar IOSSwitch = withStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#237ed5',\n          opacity: 1,\n          border: 'none'\n        }\n      },\n      '&$focusVisible $thumb': {\n        color: '#237ed5',\n        border: '6px solid #fff'\n      }\n    },\n    thumb: {\n      width: 24,\n      height: 24\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: \"1px solid \".concat(theme.palette.grey[400]),\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border'])\n    },\n    checked: {},\n    focusVisible: {}\n  });\n})(function (_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return __jsx(Switch, _extends({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props));\n});\nexport default function TextCheck(_ref2) {\n  var title = _ref2.title,\n      desc = _ref2.desc,\n      change = _ref2.change,\n      name = _ref2.name;\n\n  var _useState = useState({\n    checkedB: false\n  }),\n      check = _useState[0],\n      setCheck = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    setCheck(_objectSpread(_objectSpread({}, check), {}, _defineProperty({}, event.target.name, event.target.checked)));\n    console.log(check.checkedB);\n    change(event.target.checked, name);\n  };\n\n  return __jsx(FormGroup, null, __jsx(\"div\", {\n    className: styles.textCheck\n  }, __jsx(\"div\", {\n    className: styles.textCheckTop\n  }, __jsx(\"h6\", null, title), __jsx(FormControlLabel, {\n    control: __jsx(IOSSwitch, {\n      checked: check.checkedB,\n      onChange: handleChange,\n      name: \"checkedB\"\n    }),\n    label: \"\"\n  })), __jsx(\"div\", {\n    className: styles.textCheckBottom\n  }, desc)));\n}","map":null,"metadata":{},"sourceType":"module"}