{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/maticaba/matidev/gentem-next/pages/org/[slug].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../../api';\nimport { Layout as AntLayout } from 'antd';\nimport Layout from '../../components/Layout';\nimport Contenido from '../../components/organization/Contenido';\nimport ContenidoSider from '../../components/organization/ContenidoSider';\nimport useLocation from '../../components/usables/useLocation';\nimport Map from '../../components/organization/Map';\nimport * as styles from '../../styles/organization.module.scss';\n\nvar ORG = function ORG(_ref) {\n  _s();\n\n  var organization = _ref.organization;\n\n  var _useState = useState(),\n      orgLocation = _useState[0],\n      setOrgLocation = _useState[1];\n\n  useEffect(function () {\n    setOrgLocation(organization.location);\n  }, []);\n  var location = useLocation(orgLocation);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(AntLayout, {\n    className: styles.ongProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.layoutCenter,\n    style: {\n      flexWrap: 'wrap'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Map, {\n    googleMapURL: 'https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyCDr1CIiG6Nop7lpjmIbVk8NVC1IjW_oXE',\n    city: organization.city,\n    country: organization.country,\n    coordenates: location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), __jsx(AntLayout, {\n    className: \"\".concat(styles.ongProfileContent, \" \").concat(styles.layout),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(Contenido, {\n    communityworkwith: organization.communityworkwith,\n    name: organization.name,\n    description: organization.description,\n    logo: organization.logo,\n    objetive: organization.objective,\n    howusedonation: organization.howusedonations,\n    website: organization.website,\n    email: organization.email,\n    phone: organization.phones,\n    facebook: organization.facebook,\n    instagram: organization.instagram,\n    paymentslink: organization.paymentslink,\n    whatsapp: organization.whatsapp,\n    sponsors: organization.sponsors,\n    accounts: organization.accounts,\n    city: organization.city,\n    country: organization.country,\n    instructionstodeliverproducts: organization.instructionstodeliverproducts\n    /*  location={location.props.mapLocation} */\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(ContenidoSider, {\n    name: organization.name,\n    accounts: organization.accounts,\n    instructionstodeliverproducts: organization.instructionstodeliverproducts,\n    paymentslink: organization.paymentslink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(ORG, \"QwgEMSFUdmgyd7kyfmF47kRiIkQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = ORG;\nexport default ORG;\n\nORG.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, slug, request, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            // Fetch necessary data for the blog post using params.id\n            slug = query.slug;\n            _context.next = 4;\n            return api.get(\"/organizations/\".concat(slug));\n\n          case 4:\n            request = _context.sent;\n            response = request.data.data;\n            return _context.abrupt(\"return\", {\n              organization: response\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"ORG\");","map":{"version":3,"sources":["/home/maticaba/matidev/gentem-next/pages/org/[slug].tsx"],"names":["React","useState","useEffect","api","Layout","AntLayout","Contenido","ContenidoSider","useLocation","Map","styles","ORG","organization","orgLocation","setOrgLocation","location","ongProfile","layoutCenter","flexWrap","city","country","ongProfileContent","layout","communityworkwith","name","description","logo","objective","howusedonations","website","email","phones","facebook","instagram","paymentslink","whatsapp","sponsors","accounts","instructionstodeliverproducts","getInitialProps","query","slug","get","request","response","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { NextPage } from 'next'\nimport { Organization } from '../../interfaces/organization'\nimport { api } from '../../api'\nimport { Layout as AntLayout } from 'antd'\nimport Layout from '../../components/Layout'\nimport Contenido from '../../components/organization/Contenido'\nimport ContenidoSider from '../../components/organization/ContenidoSider'\nimport useLocation from '../../components/usables/useLocation'\nimport Map from '../../components/organization/Map'\nimport Head from 'next/head'\nimport * as styles from '../../styles/organization.module.scss'\n\ninterface Props {\n  organization: Organization\n}\n\nconst ORG: NextPage<Props> = ({ organization }) => {\n  const [orgLocation, setOrgLocation] = useState<any>()\n\n  useEffect(() => {\n    setOrgLocation(organization.location)\n  }, [])\n\n  const location = useLocation(orgLocation)\n\n  return (\n    <Layout>\n      <AntLayout className={styles.ongProfile}>\n        <div className={styles.layoutCenter} style={{ flexWrap: 'wrap' }}>\n          <Map\n            googleMapURL={\n              'https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyCDr1CIiG6Nop7lpjmIbVk8NVC1IjW_oXE'\n            }\n            city={organization.city}\n            country={organization.country}\n            coordenates={location}\n          ></Map>\n          <AntLayout className={`${styles.ongProfileContent} ${styles.layout}`}>\n            <Contenido\n              communityworkwith={organization.communityworkwith}\n              name={organization.name}\n              description={organization.description}\n              logo={organization.logo}\n              objetive={organization.objective}\n              howusedonation={organization.howusedonations}\n              website={organization.website}\n              email={organization.email}\n              phone={organization.phones}\n              facebook={organization.facebook}\n              instagram={organization.instagram}\n              paymentslink={organization.paymentslink}\n              whatsapp={organization.whatsapp}\n              sponsors={organization.sponsors}\n              accounts={organization.accounts}\n              city={organization.city}\n              country={organization.country}\n              instructionstodeliverproducts={\n                organization.instructionstodeliverproducts\n              }\n              /*  location={location.props.mapLocation} */\n            />\n            <ContenidoSider\n              name={organization.name}\n              accounts={organization.accounts}\n              instructionstodeliverproducts={\n                organization.instructionstodeliverproducts\n              }\n              paymentslink={organization.paymentslink}\n            />\n          </AntLayout>\n        </div>\n      </AntLayout>\n    </Layout>\n  )\n}\n\nexport default ORG\n\nORG.getInitialProps = async ({ query }) => {\n  // Fetch necessary data for the blog post using params.id\n  const slug = query.slug\n  const request = await api.get(`/organizations/${slug}`)\n  const response = request.data.data as Organization\n\n  return { organization: response }\n}\n"]},"metadata":{},"sourceType":"module"}