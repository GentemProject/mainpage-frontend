{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar BASE_API = 'http://localhost:3030';\nexport var getDistinct = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var request, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"\".concat(BASE_API, \"/api/projects/distinct\"));\n\n          case 3:\n            request = _context.sent;\n            _context.next = 6;\n            return request.json();\n\n          case 6:\n            response = _context.sent;\n            data = response;\n            return _context.abrupt(\"return\", data);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", console.log(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function getDistinct() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getAll = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var request, response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"\".concat(BASE_API, \"/api/projects/\"));\n\n          case 3:\n            request = _context2.sent;\n            _context2.next = 6;\n            return request.json();\n\n          case 6:\n            response = _context2.sent;\n            data = response;\n            return _context2.abrupt(\"return\", data);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", console.log(_context2.t0));\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function getAll() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getForId = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var request, response, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return fetch(\"\".concat(BASE_API, \"/api/projects/id/\").concat(id));\n\n          case 3:\n            request = _context3.sent;\n            _context3.next = 6;\n            return request.json();\n\n          case 6:\n            response = _context3.sent;\n            data = response;\n            return _context3.abrupt(\"return\", data);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", console.log(_context3.t0));\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 11]]);\n  }));\n\n  return function getForId(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getForFilters = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params) {\n    var request, response, data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch(\"\".concat(BASE_API, \"/api/projects/filters/\").concat(params.country, \"&\").concat(params.products, \"&\").concat(params.paymenData, \"&\").concat(params.transfer, \"&\").concat(params.community));\n\n          case 3:\n            request = _context4.sent;\n            _context4.next = 6;\n            return request.json();\n\n          case 6:\n            response = _context4.sent;\n            data = response;\n            return _context4.abrupt(\"return\", data);\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](0);\n            return _context4.abrupt(\"return\", console.log(_context4.t0));\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 11]]);\n  }));\n\n  return function getForFilters(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/uriel/gentemapp/frontend/api/filters.ts"],"names":["BASE_API","getDistinct","fetch","request","json","response","data","console","log","getAll","getForId","id","getForFilters","params","country","products","paymenData","transfer","community"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,uBAAjB;AAQA,OAAO,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEDC,KAAK,WAAIF,QAAJ,4BAFJ;;AAAA;AAEjBG,YAAAA,OAFiB;AAAA;AAAA,mBAGAA,OAAO,CAACC,IAAR,EAHA;;AAAA;AAGjBC,YAAAA,QAHiB;AAIjBC,YAAAA,IAJiB,GAIVD,QAJU;AAAA,6CAMhBC,IANgB;;AAAA;AAAA;AAAA;AAAA,6CAQhBC,OAAO,CAACC,GAAR,aARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXP,WAAW;AAAA;AAAA;AAAA,GAAjB;AAWP,OAAO,IAAMQ,MAAM;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEIP,KAAK,WAAIF,QAAJ,oBAFT;;AAAA;AAEZG,YAAAA,OAFY;AAAA;AAAA,mBAGKA,OAAO,CAACC,IAAR,EAHL;;AAAA;AAGZC,YAAAA,QAHY;AAIZC,YAAAA,IAJY,GAILD,QAJK;AAAA,8CAMXC,IANW;;AAAA;AAAA;AAAA;AAAA,8CAQXC,OAAO,CAACC,GAAR,cARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANC,MAAM;AAAA;AAAA;AAAA,GAAZ;AAWP,OAAO,IAAMC,QAAQ;AAAA,uEAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEET,KAAK,WAAIF,QAAJ,8BAAgCW,EAAhC,EAFP;;AAAA;AAEdR,YAAAA,OAFc;AAAA;AAAA,mBAGGA,OAAO,CAACC,IAAR,EAHH;;AAAA;AAGdC,YAAAA,QAHc;AAIdC,YAAAA,IAJc,GAIPD,QAJO;AAAA,8CAKbC,IALa;;AAAA;AAAA;AAAA;AAAA,8CAObC,OAAO,CAACC,GAAR,cAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARE,QAAQ;AAAA;AAAA;AAAA,GAAd;AAWP,OAAO,IAAME,aAAa;AAAA,uEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHX,KAAK,WACtBF,QADsB,mCACWa,MAAM,CAACC,OADlB,cAC6BD,MAAM,CAACE,QADpC,cACgDF,MAAM,CAACG,UADvD,cACqEH,MAAM,CAACI,QAD5E,cACwFJ,MAAM,CAACK,SAD/F,EAFF;;AAAA;AAEnBf,YAAAA,OAFmB;AAAA;AAAA,mBAKFA,OAAO,CAACC,IAAR,EALE;;AAAA;AAKnBC,YAAAA,QALmB;AAMnBC,YAAAA,IANmB,GAMZD,QANY;AAAA,8CAOlBC,IAPkB;;AAAA;AAAA;AAAA;AAAA,8CASlBC,OAAO,CAACC,GAAR,cATkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbI,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["const BASE_API = 'http://localhost:3030'\ninterface paramsFilters {\n  country: string\n  products: boolean\n  paymenData: boolean\n  transfer: boolean\n  community: number\n}\nexport const getDistinct = async () => {\n  try {\n    const request = await fetch(`${BASE_API}/api/projects/distinct`)\n    const response = await request.json()\n    const data = response\n\n    return data\n  } catch (error) {\n    return console.log(error)\n  }\n}\nexport const getAll = async () => {\n  try {\n    const request = await fetch(`${BASE_API}/api/projects/`)\n    const response = await request.json()\n    const data = response\n\n    return data\n  } catch (error) {\n    return console.log(error)\n  }\n}\nexport const getForId = async (id: string) => {\n  try {\n    const request = await fetch(`${BASE_API}/api/projects/id/${id}`)\n    const response = await request.json()\n    const data = response\n    return data\n  } catch (error) {\n    return console.log(error)\n  }\n}\n\nexport const getForFilters = async (params: paramsFilters) => {\n  try {\n    const request = await fetch(\n      `${BASE_API}/api/projects/filters/${params.country}&${params.products}&${params.paymenData}&${params.transfer}&${params.community}`\n    )\n    const response = await request.json()\n    const data = response\n    return data\n  } catch (error) {\n    return console.log(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}