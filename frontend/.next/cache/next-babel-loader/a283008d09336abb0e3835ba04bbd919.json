{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport Modal from 'react-modal'; // Components & Usables\n\nimport { ModalContent } from './Contenido';\nimport TargetBase from '../usables/TargetBase';\nimport ResultItem from './ResultItem'; // Svg\n\nimport Close from '../svg/close'; // Styles\n\nimport * as styles from '../../styles/onglist.module.scss';\nModal.setAppElement('#__next');\n\nfunction ContenidoSider(props) {\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var ONGs = props.ONGs;\n  var filter = props.filter;\n  return __jsx(\"div\", {\n    className: styles.ongListResult\n  }, __jsx(\"div\", {\n    className: styles.ongListResultQuantity\n  }, __jsx(\"h6\", null, \"Mostrando \", ONGs.data.length, \" proyectos\"), __jsx(\"div\", {\n    className: styles.quantityBtn,\n    onClick: handleOpen\n  }, \"FILTROS\"), __jsx(Modal, {\n    className: styles.listModal,\n    isOpen: open,\n    onRequestClose: handleClose\n  }, __jsx(\"button\", {\n    className: styles.modalClose,\n    onClick: handleClose\n  }, __jsx(Close, null)), __jsx(ModalContent, null))), filter && __jsx(TargetBase, {\n    filter: filter\n  }), __jsx(LazyContenidoSider, {\n    ONGs: ONGs\n  }));\n}\n\nfunction LazyContenidoSider(_ref) {\n  var ONGs = _ref.ONGs;\n\n  var _useState2 = useState(false),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var elementRef = useRef();\n  useEffect(function () {\n    var onChange = function onChange(entries\n    /* observer */\n    ) {\n      var el = entries[0];\n\n      if (el.isIntersecting) {\n        setShow(true);\n        /* observer.disconnect() */\n      }\n    };\n\n    var observer = new IntersectionObserver(onChange, {\n      rootMargin: '500px'\n    });\n    observer.observe(elementRef.current);\n    /*   return () => observer.disconnect() */\n  });\n  return __jsx(\"div\", {\n    ref: elementRef\n  }, show ? ONGs.data.map(function (ong) {\n    return __jsx(Link, {\n      key: ong.slug,\n      href: \"/org/\".concat(ong.slug)\n    }, __jsx(\"a\", null, __jsx(ResultItem, {\n      name: ong.name,\n      desc: ong.description,\n      logo: ong.logo,\n      city: ong.city,\n      country: ong.country\n    })));\n  }) : null);\n}\n\nexport default ContenidoSider;","map":null,"metadata":{},"sourceType":"module"}